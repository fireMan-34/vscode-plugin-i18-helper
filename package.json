{
  "name": "i18n-extension",
  "displayName": "i18n-extension",
  "icon": "./assets/icons/国际化.png",
  "description": "国际化扩展工具, 支持 js 、ts、 json 键值对解析 (注意解析类型的时候也会当作键值对), 支持复制国际化键值对文本转国际化代码，目前支持单一一种形式。",
  "author": {
    "name": "firman-34",
    "email": "524915379@qq.com",
    "url": "https://github.com/fireMan-34/vscode-plugin-i18n-helper"
  },
  "bugs": {
    "email": "524915379@qq.com",
    "url": "https://github.com/fireMan-34/vscode-plugin-i18n-helper/issues"
  },
  "publisher": "fireMan-34",
  "version": "0.2.93",
  "engines": {
    "vscode": "^1.81.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:javascriptreact",
    "onLanguage:typescriptreact"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": [
      {
        "title": "国际化扩展插件配置",
        "properties": {
          "i18n-extension.isOpenCheckDir": {
            "type": "boolean",
            "default": true,
            "description": "是否启动之后检测现有国际化项目是否失效，失效则移除"
          },
          "i18n-extension.mainLanguage": {
            "type": "string",
            "enum": [
              "ZH_CN",
              "ZH_HK",
              "EN_US",
              "KO_KR",
              "JA_JP",
              "UN_KNOWN"
            ],
            "enumDescriptions": [
              "中文简体",
              "中文繁体",
              "英文",
              "韩文",
              "日文",
              "未知"
            ],
            "default": "ZH_CN",
            "description": "配置当前识别语言"
          },
          "i18n-extension.scanFolders": {
            "type": "array",
            "default": [
              "locales",
              "locale"
            ],
            "description": "支持扫描的国际化目录匹配"
          },
          "i18n-extension.generateTemplate": {
            "description": "配置复制键值对产生的模板文本，目前已加入其它文本渲染场景。请输入 ${id} ${msg} 如果有字符串则用单引号的形式。",
            "default": "formatMessage({\nid: '${id}',\ndefaultMessage: '${msg}',\n})",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "formatMessage({\nid: '${id}',\ndefaultMessage: '${msg}',\n})",
                  "formatMessage({\nid: '${id}',\n})",
                  "intl.formatMessage({\nid: '${id}',\ndefaultMessage: '${msg}',\n})",
                  "intl.formatMessage({\nid: '${id}',\n})",
                  "i18n.t('${id}')",
                  "t('${id}')",
                  "$t('${id}')"
                ],
                "enumItemLabels": [
                  "formatMessage 渲染国际化 key&val",
                  "formatMessage 渲染国际化 key",
                  "formatMessage 渲染国际化 key&val， 添加 intl 前缀",
                  "formatMessage 渲染国际化 key， 添加 intl 前缀",
                  "i18n.t 渲染国际化 key， 添加 intl 前缀",
                  "t 渲染国际化 key， 添加 intl 前缀"
                ],
                "enumDescriptions": [
                  "formatMessage({\nid: '${id}',\ndefaultMessage: '${msg}',\n})",
                  "formatMessage({\nid: '${id}',\n})",
                  "intl.formatMessage({\nid: '${id}',\ndefaultMessage: '${msg}',\n})",
                  "intl.formatMessage({\nid: '${id}',\n})",
                  "i18n.t('${id}')",
                  "t('${id}')",
                  "$t('${id}')"
                ]
              },
              {
                "type": "string"
              }
            ]
          },
          "i18n-extension.fastTranslateLanguageType": {
            "type": "array",
            "items": {
              "enum": [
                "ZH_CN",
                "ZH_HK",
                "EN_US",
                "KO_KR",
                "JA_JP",
                "UN_KNOWN"
              ],
              "enumDescriptions": [
                "中文简体",
                "中文繁体",
                "英文",
                "韩文",
                "日文",
                "未知"
              ]
            },
            "default": [
              "EN_US"
            ],
            "description": "快速翻译中输出的语言类型"
          },
          "i18n-extension.translateEngine": {
            "type": "string",
            "enum": [
              "baidu",
              "caiYun",
              "Google"
            ],
            "enumDescriptions": [
              "百度翻译",
              "彩云翻译",
              "谷歌翻译"
            ],
            "default": "baidu",
            "description": "翻译引擎类型"
          },
          "i18n-extension.generatedCodeFromStrMode": {
            "type": "string",
            "title": "字符串自动生成国际化代码功能启用模式",
            "description": "修改启用模式，避免一些场景强制写入，或者性能浪费。",
            "enum": [
              "ask",
              "silent",
              "none"
            ],
            "enumDescriptions": [
              "询问模式",
              "静默模式",
              "罢工模式"
            ],
            "enumItemLabels": [
              "询问",
              "静默",
              "罢工"
            ],
            "default": "ask"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "i18n.parseKeyAndValue2FormatMessage",
        "title": "提取国际化代码",
        "icon": "./assets/icons/提取.svg"
      },
      {
        "command": "i18n.openWebView",
        "title": "打开国际化页面",
        "icon": "./assets/icons/页面.svg"
      },
      {
        "command": "i18n.scanI18File",
        "title": "扫描国际化代码",
        "icon": "./assets/icons/扫描.svg"
      },
      {
        "command": "i18n.i18nRuleDirSet",
        "title": "文件规则设定命令",
        "icon": "./assets/icons/提取.svg"
      },
      {
        "command": "i18n.fastTranslate",
        "title": "快速翻译单个文本",
        "icon": "./assets/icons/提取.svg"
      },
      {
        "command": "i18n.strToi18nCode",
        "title": "文本转国际化代码",
        "icon": "./assets/icons/提取.svg"
      },
      {
        "command": "i18n.selectionToi18nCode",
        "title": "选中文本转国际化",
        "icon": "./assets/icons/提取.svg"
      }
    ],
    "keybindings": [
      {
        "command": "i18n.parseKeyAndValue2FormatMessage",
        "key": "ctrl+i",
        "win": "ctrl+i",
        "mac": "cmd+i",
        "when": "editorTextFocus"
      },
      {
        "command": "i18n.selectionToi18nCode",
        "key": "ctrl+shift+2",
        "win": "ctrl+shift+2",
        "mac": "ctrl+shift+2",
        "when": "editorHasSelection"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "i18n.scanI18File",
          "group": "7_modification",
          "when": "explorerResourceIsFolder && resourceFilename in i18n.supportedFolders"
        }
      ],
      "editor/context": [
        {
          "command": "i18n.parseKeyAndValue2FormatMessage",
          "group": "9_cutcopypaste",
          "when": "editorTextFocus && editorHasSelection && i18n.isInI18nDirOne"
        },
        {
          "command": "i18n.selectionToi18nCode",
          "group": "9_cutcopypaste@34",
          "when": "editorHasSelection"
        }
      ],
      "view/item/context": [
        {
          "command": "i18n.i18nRuleDirSet",
          "when": "view =~ /i18n-map/ && viewItem == i18n.dir"
        }
      ]
    },
    "snippets": [],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "i18n-map-views",
          "title": "国际化",
          "icon": "./assets/icons/国际化视图.svg"
        }
      ]
    },
    "views": {
      "i18n-map-views": [
        {
          "id": "i18n-map-dir",
          "name": "国际化目录",
          "contextualTitle": "国际化目录语言类型划分"
        },
        {
          "id": "i18n-map-view",
          "name": "国际化文本"
        },
        {
          "id": "i18n-map-config",
          "name": "国际化配置",
          "type": "webview"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "i18n-map-config",
        "contents": "欢迎使用极简 React 国际化开发助手，如果使用有什么建议或者 bug 可以在 [GitHub issue](https://github.com/fireMan-34/vscode-plugin-i18n-helper/issues) 提，作者水平眼界限制，感谢你的建议。",
        "when": "isWindows||isLinux||isMac"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run dev:webview && npm run dev",
    "compile": "tsc -p ./ && tsc-alias",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js",
    "test:unit": "mocha ./src/test/unit/index.ts",
    "ri": "rimraf ./node_modules && npm install",
    "package": "vsce package",
    "dev:webview": "webpack --config ./client/webpack.config.js",
    "dev": "webpack --config ./webpack.config.js",
    "prepare": "husky install",
    "commit:talk": "pwsh ./scripts/commitTalk.ps1",
    "version": "npm run commit:talk",
    "preversion": "pwsh ./scripts/preVersion.ps1",
    "simpleMockSever": "ts-node ./mock/mock.simple.server.ts"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/lodash": "^4.14.197",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.11.7",
    "@types/react": "^18.2.21",
    "@types/react-dom": "^18.2.7",
    "@types/vscode": "^1.81.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "@vscode/vsce": "^2.21.0",
    "autoprefixer": "^10.4.15",
    "cross-env": "^7.0.3",
    "css-loader": "^6.8.1",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "html-webpack-plugin": "^5.5.3",
    "husky": "^8.0.0",
    "mocha": "^10.2.0",
    "postcss": "^8.4.29",
    "postcss-loader": "^7.3.3",
    "rimraf": "^5.0.1",
    "style-loader": "^3.3.3",
    "tailwindcss": "^3.3.3",
    "ts-loader": "^9.4.4",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "tsc-alias": "^1.8.7",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "axios": "^1.6.1",
    "chinese-conv": "^1.0.1",
    "clipboardy": "^2.0.0",
    "lodash": "^4.17.21",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fireMan-34/vscode-plugin-i18n-helper"
  },
  "license": "Apache-2.0"
}